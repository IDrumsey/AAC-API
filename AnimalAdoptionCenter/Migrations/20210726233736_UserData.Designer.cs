// <auto-generated />
using AnimalAdoptionCenter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AnimalAdoptionCenter.Migrations
{
    [DbContext(typeof(AppDatabaseContext))]
    [Migration("20210726233736_UserData")]
    partial class UserData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AnimalAdoptionCenterModels.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("classificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("favoriteActivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("favoriteToy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("heightInches")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("species")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("storeId")
                        .HasColumnType("int");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.HasIndex("storeId");

                    b.ToTable("Animal");

                    b.HasData(
                        new
                        {
                            AnimalId = 1,
                            age = 5,
                            classificationName = "Dog",
                            description = "Charlie was raised as a pup here from a litter of 9 other brothers and sisters.",
                            favoriteActivity = "Going on long walks",
                            favoriteToy = "Rope",
                            gender = "m",
                            heightInches = 30,
                            name = "Charlie",
                            species = "Golden Retriever",
                            storeId = 1,
                            weight = 80
                        },
                        new
                        {
                            AnimalId = 2,
                            age = 2,
                            classificationName = "Dog",
                            description = "Bailey was found on the side of a road and brought to the center for rehabilitation and has been here almost a year.",
                            favoriteActivity = "Going to the park",
                            favoriteToy = "Squeaky toys",
                            gender = "f",
                            heightInches = 15,
                            name = "Bailey",
                            species = "West Highland White terrier",
                            storeId = 1,
                            weight = 40
                        });
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.DayOperationHours", b =>
                {
                    b.Property<int>("DayOperationHoursId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.HasKey("DayOperationHoursId");

                    b.HasIndex("StoreId");

                    b.ToTable("DayOperationHours");

                    b.HasData(
                        new
                        {
                            DayOperationHoursId = 1,
                            StoreId = 1,
                            day = 0
                        },
                        new
                        {
                            DayOperationHoursId = 2,
                            StoreId = 1,
                            day = 1
                        },
                        new
                        {
                            DayOperationHoursId = 3,
                            StoreId = 1,
                            day = 2
                        },
                        new
                        {
                            DayOperationHoursId = 4,
                            StoreId = 1,
                            day = 3
                        },
                        new
                        {
                            DayOperationHoursId = 5,
                            StoreId = 1,
                            day = 4
                        },
                        new
                        {
                            DayOperationHoursId = 6,
                            StoreId = 1,
                            day = 5
                        },
                        new
                        {
                            DayOperationHoursId = 7,
                            StoreId = 1,
                            day = 6
                        });
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.FileName", b =>
                {
                    b.Property<int>("FileNameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileNameId");

                    b.HasIndex("AnimalId");

                    b.ToTable("FileName");
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.SimpleTime", b =>
                {
                    b.Property<int>("SimpleTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayOperationHoursId")
                        .HasColumnType("int");

                    b.Property<int>("hours")
                        .HasColumnType("int");

                    b.Property<int>("intervalSide")
                        .HasColumnType("int");

                    b.Property<int>("minutes")
                        .HasColumnType("int");

                    b.Property<int>("seconds")
                        .HasColumnType("int");

                    b.HasKey("SimpleTimeId");

                    b.HasIndex("DayOperationHoursId");

                    b.ToTable("SimpleTime");

                    b.HasData(
                        new
                        {
                            SimpleTimeId = 1,
                            DayOperationHoursId = 1,
                            hours = 8,
                            intervalSide = 0,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 2,
                            DayOperationHoursId = 1,
                            hours = 17,
                            intervalSide = 1,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 3,
                            DayOperationHoursId = 2,
                            hours = 8,
                            intervalSide = 0,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 4,
                            DayOperationHoursId = 2,
                            hours = 17,
                            intervalSide = 1,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 5,
                            DayOperationHoursId = 3,
                            hours = 8,
                            intervalSide = 0,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 6,
                            DayOperationHoursId = 3,
                            hours = 17,
                            intervalSide = 1,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 7,
                            DayOperationHoursId = 4,
                            hours = 8,
                            intervalSide = 0,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 8,
                            DayOperationHoursId = 4,
                            hours = 17,
                            intervalSide = 1,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 9,
                            DayOperationHoursId = 5,
                            hours = 8,
                            intervalSide = 0,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 10,
                            DayOperationHoursId = 5,
                            hours = 17,
                            intervalSide = 1,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 11,
                            DayOperationHoursId = 6,
                            hours = 7,
                            intervalSide = 0,
                            minutes = 0,
                            seconds = 0
                        },
                        new
                        {
                            SimpleTimeId = 12,
                            DayOperationHoursId = 6,
                            hours = 20,
                            intervalSide = 1,
                            minutes = 0,
                            seconds = 0
                        });
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreId");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            StoreId = 1,
                            address = "123 abcd st. NW someCity, FL"
                        });
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            password = "47QqA1aaTNATDHA8gIheCqqt8RDFIalB28ZkFDpbHK0=",
                            role = "Employee",
                            username = "testuser1"
                        },
                        new
                        {
                            UserId = 2,
                            password = "AIxlio2QDVosgpFXAJtZfPyhINBkNN+8oz6rj9O+3xQ=",
                            role = "Manager",
                            username = "testuser2"
                        });
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.Animal", b =>
                {
                    b.HasOne("AnimalAdoptionCenterModels.Store", null)
                        .WithMany("Animals")
                        .HasForeignKey("storeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.DayOperationHours", b =>
                {
                    b.HasOne("AnimalAdoptionCenterModels.Store", null)
                        .WithMany("operationHours")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.FileName", b =>
                {
                    b.HasOne("AnimalAdoptionCenterModels.Animal", null)
                        .WithMany("pictures")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.SimpleTime", b =>
                {
                    b.HasOne("AnimalAdoptionCenterModels.DayOperationHours", null)
                        .WithMany("times")
                        .HasForeignKey("DayOperationHoursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.Animal", b =>
                {
                    b.Navigation("pictures");
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.DayOperationHours", b =>
                {
                    b.Navigation("times");
                });

            modelBuilder.Entity("AnimalAdoptionCenterModels.Store", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("operationHours");
                });
#pragma warning restore 612, 618
        }
    }
}
